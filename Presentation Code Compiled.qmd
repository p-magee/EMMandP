---
title: "Presentation Code Compiled"
format: html
editor: visual
---

## Data

```{r packages message=FALSE}
library(tidyverse)
library(car)
library(class)
library(leaps)
library(glmnet)
library(pls)
```

```{r load message=FALSE}
df <- read_csv("PPP details.csv")
glimpse(df)
```

### Cleaning

```{r cleaning}
ppp <- df %>%
  mutate(type_mod = case_when(
    `Business type` == "501(c)3 – Non Profit" ~ "Non-Profit",
    `Business type` == "501(c)6 – Non Profit Membership" ~ "Non-Profit",
    `Business type` == "Non-Profit Childcare Center" ~ "Non-Profit",
    `Business type` == "Non-Profit Organization" ~ "Non-Profit",
    `Business type` == "Professional Association" ~ "Non-Profit",
    `Business type` == "Housing Co-op" ~ "Non-Profit",
    `Business type` == "Cooperative" ~ "Non-Profit",
    `Business type` == "Corporation" ~ "For-profit, group",
    `Business type` == "Limited  Liability Company(LLC)" ~ "For-profit, group",
    `Business type` == "Limited Liability Partnership" ~ "For-profit, group",
    `Business type` == "Qualified Joint-Venture (spouses)" ~ "For-profit, group",
    `Business type` == "Subchapter S Corporation" ~ "For-profit, group",
    `Business type` == "Tribal Concerns" ~ "For-profit, group",
    `Business type` == "Joint Venture" ~ "For-profit, group",
    `Business type` == "Trust" ~ "For-profit, group",
    `Business type` == "Independent contractors" ~ "For-profit, Inividual",
    `Business type` == "Single Member LLC" ~ "For-profit, Inividual",
    `Business type` == "Sole Proprietorship" ~ "For-profit, Inividual",
    `Business type` == "Self-Employed Individuals" ~ "For-profit, Inividual"
  )) %>%
  select(
    `Amount forgiven`, Payroll, Rent, Utilities,
    `Health Care`, `Mortgage Interest`, `Debt Interest`, `Refinancing EIDL`, Industry,`Jobs reported`, type_mod, `*Loan Status`, `Date approved`, `Date forgiven`,) %>%
  mutate(
    type_mod = as_factor(type_mod),
    Industry = as_factor(Industry)
  ) %>%
  na.omit()
names(ppp) <-  stringr::str_replace_all(names(ppp), " ", "_")
glimpse(ppp)

#`Borrower zip` = as.factor(str_remove(`Borrower zip`, "-.+")
```

### Exploration

```{r explore}
summary(ppp)
car::vif(lm(Amount_forgiven ~ ., ppp))

ppp |>
  ggplot(aes(x = type_mod)) +
    geom_bar()

#remove 3 variables b/c too many levels
#GGally::ggpairs(ppp %>% select(-Business_type, -Industry, -Borrower_zip))

ppp |>
  ggplot(aes(x = type_mod, y = Health_Care)) +
    geom_boxplot()
```

## Regression

### Stepwise

```{r stepwise}
#forward using type_mod
set.seed(1234)
reg_full <- lm(Amount_forgiven ~ ., data = ppp)
reg_null <- lm(Amount_forgiven ~ 1, data = ppp)
step_out_f <- step(reg_null, 
                    scope = list(lower = reg_null, upper = reg_full),
                    method = "forward",
                    trace = 0)

#forward results
summary(step_out_f)
```

```{r stepwise_mse}

set.seed(1234)
reg_k10 <- glm(Amount_forgiven ~ Payroll + Rent + Utilities + Health_Care + Debt_Interest + Mortgage_Interest + Jobs_reported + type_mod + Date_forgiven + Date_approved, data = ppp)
regCVk10 <- boot::cv.glm(ppp, reg_k10, K = 10)
regCVk10$delta[2]
```

### LASSO and Ridge

```{r ridge}
X <- model.matrix(lm(Amount_forgiven ~ ., ppp))[,-1]

set.seed(1234)
ridge_ppp <- cv.glmnet(X, ppp$Amount_forgiven, alpha = 0)
plot(ridge_ppp)
ridge_ppp$lambda.min
min(ridge_ppp$cvm)
```

```{r lasso}
set.seed(1234)
lasso_ppp <- cv.glmnet(X, ppp$Amount_forgiven, alpha = 1)
plot(lasso_ppp)
lasso_ppp$lambda.1se
min(lasso_ppp$cvm)
coef(lasso_ppp)
```

### PCR and PLS

Ask professor about these errors

```{r pca eval = F}
#screeplot
screeplot(
  prcomp(
    model.matrix(lm(Amount_forgiven ~ ., data = ppp))
  )
) #indicates need to scale

#PCR
names(ppp) <-  stringr::str_replace_all(names(ppp), " ", "_")
set.seed(1234)
pcr_ppp <-  pcr(Amount_forgiven ~ ., 
                data = ppp, 
                scale = TRUE,
                validation = "CV")
#summary(pcr_ppp)
which.min(as.numeric(MSEP(pcr_ppp, estimate = "CV")$val)) - 1
min(as.numeric(MSEP(pcr_ppp, estimate = "CV")$val))

#PLS
set.seed(1234)
pls_ppp <-  plsr(Amount_forgiven ~ ., 
                data = ppp,
                scale = TRUE,
                validation = "CV")
#summary(pls_ppp)
which.min(as.numeric(MSEP(pls_ppp, estimate = "CV")$val)) - 1
min(as.numeric(MSEP(pls_ppp, estimate = "CV")$val))
```

### Comparing MSEs

| Method   | Prediction MSE | Predictors |
|----------|----------------|------------|
| Stepwise | 2106947766     | 12         |
| Ridge    | 3774934490     | 33         |
| LASSO    | 2002900584     | 5          |
| PCR      | 2041182726     | 33         |
| PLS      | 2040985265     | 10         |

## Classification

```{r}
ppp <- df %>%
  mutate(type_mod = case_when(
    `Business type` == "501(c)3 – Non Profit" ~ "Non-Profit",
    `Business type` == "501(c)6 – Non Profit Membership" ~ "Non-Profit",
    `Business type` == "Non-Profit Childcare Center" ~ "Non-Profit",
    `Business type` == "Non-Profit Organization" ~ "Non-Profit",
    `Business type` == "Professional Association" ~ "Non-Profit",
    `Business type` == "Housing Co-op" ~ "Non-Profit",
    `Business type` == "Cooperative" ~ "Non-Profit",
    `Business type` == "Corporation" ~ "For-profit, group",
    `Business type` == "Limited  Liability Company(LLC)" ~ "For-profit, group",
    `Business type` == "Limited Liability Partnership" ~ "For-profit, group",
    `Business type` == "Qualified Joint-Venture (spouses)" ~ "For-profit, group",
    `Business type` == "Subchapter S Corporation" ~ "For-profit, group",
    `Business type` == "Tribal Concerns" ~ "For-profit, group",
    `Business type` == "Joint Venture" ~ "For-profit, group",
    `Business type` == "Trust" ~ "For-profit, group",
    `Business type` == "Independent contractors" ~ "For-profit, Inividual",
    `Business type` == "Single Member LLC" ~ "For-profit, Inividual",
    `Business type` == "Sole Proprietorship" ~ "For-profit, Inividual",
    `Business type` == "Self-Employed Individuals" ~ "For-profit, Inividual"
  )) %>%
  select(
    `Amount forgiven`, Payroll, Rent, Utilities,
    `Health Care`, `Mortgage Interest`, `Debt Interest`, `Refinancing EIDL`,
    `Business type`, Industry, `Loan amount`, `Gender`, `Race`, `Jobs reported`, type_mod, `*Loan Status`, `Date approved`, `Date forgiven`, `Borrower zip`, `Age of business`) %>%
  mutate(
    type_mod = as_factor(type_mod),
    Industry = as_factor(Industry),
    Gender = as_factor(Gender),
    Race = as_factor(Race),
    `Age of Business` = as_factor(`Age of business`),
    `Borrower zip` = as.factor(str_remove(`Borrower zip`, "-.+"))
  ) %>%
  na.omit()
names(ppp) <-  stringr::str_replace_all(names(df), " ", "_")
glimpse(df)
summary(df)
```

## LDA and QDA

```{r}
lda_output <- MASS::lda(type_mod ~ Gender + Industry 
      + Age_of_business + Race + Jobs_reported + Loan_amount, data = ppp, CV = T)

# create data frame with classifications and true values
lda_df <- tibble(Gender = ppp$Gender, 
                 Industry = ppp$Industry,
                 Age_of_business = ppp$Age_of_business, 
                 Race = ppp$Race, 
                 Jobs_reported = ppp$Jobs_reported, 
                 Loan_amount = ppp$Loan_amount, 
                 Class = lda_output$class) |> 
  rownames_to_column(var = "ID") |> 
  arrange(as.numeric(ID)) |> 
  bind_cols(true_q = ppp$type_mod)

round(100 * sum(lda_df$class != lda_df$true_q) / nrow(ppp), 2) #LDA Error Rate
```

```{r qda}
qda_ppp <-  MASS::qda(type_mod ~ Age_of_business + Jobs_reported + Loan_amount, data = ppp, CV = TRUE)
glimpse(df)

table(filter(df, type_mod == "Non-Profit")$Age_of_business)
  
```
